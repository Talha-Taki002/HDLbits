$date
	Thu Jun 12 21:33:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module vector3_tb $end
$var wire 8 ! z [7:0] $end
$var wire 8 " y [7:0] $end
$var wire 8 # x [7:0] $end
$var wire 8 $ w [7:0] $end
$var wire 8 % _z [7:0] $end
$var wire 8 & _y [7:0] $end
$var wire 8 ' _x [7:0] $end
$var wire 8 ( _w [7:0] $end
$var reg 5 ) a [4:0] $end
$var reg 5 * b [4:0] $end
$var reg 5 + c [4:0] $end
$var reg 5 , d [4:0] $end
$var reg 5 - e [4:0] $end
$var reg 5 . f [4:0] $end
$scope module dut $end
$var wire 5 / a [4:0] $end
$var wire 5 0 b [4:0] $end
$var wire 5 1 c [4:0] $end
$var wire 5 2 d [4:0] $end
$var wire 5 3 e [4:0] $end
$var wire 5 4 f [4:0] $end
$var wire 8 5 z [7:0] $end
$var wire 8 6 y [7:0] $end
$var wire 8 7 x [7:0] $end
$var wire 8 8 w [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1101001 8
b11101011 7
b11110001 6
b1100011 5
b11000 4
b10 3
b11111 2
b10101 1
b111 0
b1101 /
b11000 .
b10 -
b11111 ,
b10101 +
b111 *
b1101 )
b1101001 (
b11101011 '
b11110001 &
b1100011 %
b1101001 $
b11101011 #
b11110001 "
b1100011 !
$end
#10000
b1010111 &
b1010111 "
b1010111 6
b1110 -
b1110 3
b101 ,
b101 2
b110010 '
b110010 #
b110010 7
b11001 +
b11001 1
b0 *
b0 0
b1011000 (
b1011000 $
b1011000 8
b1011 )
b1011 /
#20000
b11100011 %
b11100011 !
b11100011 5
b1100 &
b1100 "
b1100 6
b11001 -
b11001 3
b0 ,
b0 2
b110 '
b110 #
b110 7
b11 +
b11 1
b100 *
b100 0
b10101001 (
b10101001 $
b10101001 8
b10101 )
b10101 /
#30000
b11101 &
b11101 "
b11101 6
b1110111 %
b1110111 !
b1110111 5
b11101 .
b11101 4
b11010 -
b11010 3
b1 ,
b1 2
b11100000 '
b11100000 #
b11100000 7
b10000 +
b10000 1
b11011 *
b11011 0
b1011110 (
b1011110 $
b1011110 8
b1011 )
b1011 /
#40000
b10001000 &
b10001000 "
b10001000 6
b1101011 %
b1101011 !
b1101011 5
b11010 .
b11010 4
b10000 -
b10000 3
b1000 ,
b1000 2
b10001000 '
b10001000 #
b10001000 7
b100 +
b100 1
b10 *
b10 0
b1000 (
b1000 $
b1000 8
b1 )
b1 /
#50000
